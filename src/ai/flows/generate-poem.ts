// This is an autogenerated file from Firebase Studio.
'use server';

/**
 * @fileOverview Generates a poem based on an uploaded photo.
 *
 * - generatePoem - A function that handles the poem generation process.
 * - GeneratePoemInput - The input type for the generatePoem function.
 * - GeneratePoemOutput - The return type for the generatePoem function.
 */

import {ai} from '@/ai/ai-instance';
import {z} from 'genkit';

const GeneratePoemInputSchema = z.object({
  photoUrl: z.string().describe('The URL of the uploaded photo.'),
  style: z.string().optional().describe('The style of the poem (e.g., sonnet, free verse).'),
});
export type GeneratePoemInput = z.infer<typeof GeneratePoemInputSchema>;

const GeneratePoemOutputSchema = z.object({
  poem: z.string().describe('The generated poem.'),
});
export type GeneratePoemOutput = z.infer<typeof GeneratePoemOutputSchema>;

export async function generatePoem(input: GeneratePoemInput): Promise<GeneratePoemOutput> {
  return generatePoemFlow(input);
}

const prompt = ai.definePrompt({
  name: 'generatePoemPrompt',
  input: {
    schema: z.object({
      photoUrl: z.string().describe('The URL of the uploaded photo.'),
      style: z.string().optional().describe('The style of the poem (e.g., sonnet, free verse).'),
    }),
  },
  output: {
    schema: z.object({
      poem: z.string().describe('The generated poem.'),
    }),
  },
  prompt: `You are a poet laureate. Given the image at the provided URL, write a poem that reflects the image's content, themes, and emotions. The poem should be creative and evocative.\n\nPhoto URL: {{photoUrl}}\n\n{{#if style}}Poem style: {{style}}{{/if}}\n\nPoem:`,
});

const generatePoemFlow = ai.defineFlow<
  typeof GeneratePoemInputSchema,
  typeof GeneratePoemOutputSchema
>({
  name: 'generatePoemFlow',
  inputSchema: GeneratePoemInputSchema,
  outputSchema: GeneratePoemOutputSchema,
},
async input => {
  const {output} = await prompt(input);
  return output!;
});
